{{! UMD template that can be useful to wrap standalone CommonJS/Node modules}}
(function(root, factory) {
    if(typeof exports === 'object') {
        module.exports = factory({{#if cjsDependencies.wrapped}}{{{cjsDependencies.wrapped}}}, {{/if}}require, exports, module);
    }
    else if(typeof define === 'function' && define.amd) {
        define({{#if amdModuleId}}'{{amdModuleId}}', {{/if}}[{{#if amdDependencies.wrapped}}{{{amdDependencies.wrapped}}}, {{/if}}'require', 'exports', 'module'], factory);
    }
    else {
        var req = function(id) {return root[id];},
            exp = root,
            mod = {exports: exp};
        {{#if globalAlias}}root['{{globalAlias}}'] = {{else}}{{#if objectToExport}}root['{{objectToExport}}'] = {{/if}}{{/if}}factory({{#if globalDependencies.normal}}{{{globalDependencies.normal}}}, {{/if}}req, exp, mod);
    }
}(this, function({{#if dependencies}}{{dependencies}}, {{/if}}require, exports, module) {
{{{code}}}
return {{#if objectToExport}}{{objectToExport}}{{else}}module.exports{{/if}};
}));
